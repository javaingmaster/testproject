package special;

import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.event.KeyEvent;
import java.util.ArrayList;

import javax.swing.ImageIcon;

import toolbag.Gameimage;

public class Plane 
{
	public boolean simplefire=true;
	public boolean fireone;
	public boolean firetwo;
	public boolean firethree;
	public boolean firefour;
	public boolean firefive;
	double x,y,speed=10;
	boolean left,up,down,right;
	Image plane;
	String name;
	boolean live;
	Myfire myfire;
	Paidfire myfireone;
	boolean isfire;
	public Plane(){}
	public Plane(double x,double y,String path,String s)
	{
		super();
		this.x=x;
		this.y=y;
		this.plane=Gameimage.getimage(path);
		name=s;
		this.live=true;
	}
	public void drawmyself(Graphics g)
	{
		if(live)
		{
			if(name=="point")
			{
				Image im=plane.getScaledInstance(15, 15, Image.SCALE_DEFAULT);
				plane=im;
			}
			
			g.drawImage(plane,(int) x,(int) y, null);
			move();
		}		
	}
	public void attacktransfer( Graphics g,ArrayList <Myfire> myattack,ArrayList <Paidfire> myattackone)
	{
		if(simplefire)
		{
		for(int j=0;j<myattack.size();j++)                         //画我打出的子弹
		{				
		 myfire=myattack.get(j);	
		 if(myfire.isinframe==false){ myattack.remove(j);}
		 else{
		 myfire.drawmyself(g,this);    }  		
		}		
		}
		if(fireone)
		{
		for(int j=0;j<myattackone.size();j++)                         //画我打出的子弹
		{				
			myfireone=myattackone.get(j);	
		 if(myfireone.isinframe==false){ myattackone.remove(j);}
		 else{
			 myfireone.drawmyself(g,this);    }  		
		}		
		}
	}
	public void move()
	{
		if(left&&x>0){
			x-=speed;
		}
		if(right&&x<490){
			x+=speed;
		}
		if(up&&y>0){
			y-=speed;
		}
		if(down&&y<740){
			y+=speed;
		}
	}
	public void addmove(KeyEvent e)
	{
		switch(e.getKeyCode())
		{
		case 38:
			up=true;
		    break;
		case 40:
			down=true;
	        break;
		case 37:
			left=true;
			break;
		case 39:
			right=true;
			break;
		    default: break;
		}
	}
	public void releasemove(KeyEvent e)
	{
		switch(e.getKeyCode())
		{
		case 38:
			up=false;
	        break;
		case 40:
			down=false;
		    break;
		case 37:
			left=false;
		    break;
		case 39:
			right=false;
		    break;
		    default: break;
		}			
	}
	public void attackpress(KeyEvent e)
	{
		//System.out.println(e.getKeyCode());
		switch(e.getKeyCode())
		{
		
		case 68:
			isfire=true;
		    break;
		    
		    default: break;
		}
		
	}
	public void attackrelease(KeyEvent e)
	{
		switch(e.getKeyCode())
		{
		
		case 68:
			isfire=false;
		    break;
		    
		    default: break;
		}
		
	}
	public void collisionwithfireone(Fireobject f)
	{
		boolean iscoll;
		if(iscoll=f.collision().intersects(this.collision()))
		{
			simplefire=false;
			fireone=true;
			firetwo=false;
			firethree=false;
			firefour=false;
			firefive=false;
			f.isinframe=false;
		}		
	}
	public Rectangle collision()
	{
		return(new Rectangle((int)x,(int)y,plane.getWidth(null),plane.getHeight(null)));
	}
	
	public boolean isLive() {
		return live;
	}
	public void setLive(boolean live) {
		this.live = live;
	}
	
}
